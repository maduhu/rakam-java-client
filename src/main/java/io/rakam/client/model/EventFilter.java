/**
 * Rakam API Documentation
 * An analytics platform API that lets you create your own analytics services.
 *
 * OpenAPI spec version: 0.5
 * Contact: contact@rakam.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.rakam.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.rakam.client.model.EventFilterAggregation;
import io.rakam.client.model.Timeframe;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * EventFilter
 */

public class EventFilter   {
  @SerializedName("collection")
  private String collection = null;

  @SerializedName("timeframe")
  private Timeframe timeframe = null;

  @SerializedName("aggregation")
  private EventFilterAggregation aggregation = null;

  @SerializedName("filterExpression")
  private String filterExpression = null;

  public EventFilter collection(String collection) {
    this.collection = collection;
    return this;
  }

   /**
   * Get collection
   * @return collection
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getCollection() {
    return collection;
  }

  public void setCollection(String collection) {
    this.collection = collection;
  }

  public EventFilter timeframe(Timeframe timeframe) {
    this.timeframe = timeframe;
    return this;
  }

   /**
   * Get timeframe
   * @return timeframe
  **/
  @ApiModelProperty(example = "null", value = "")
  public Timeframe getTimeframe() {
    return timeframe;
  }

  public void setTimeframe(Timeframe timeframe) {
    this.timeframe = timeframe;
  }

  public EventFilter aggregation(EventFilterAggregation aggregation) {
    this.aggregation = aggregation;
    return this;
  }

   /**
   * Get aggregation
   * @return aggregation
  **/
  @ApiModelProperty(example = "null", value = "")
  public EventFilterAggregation getAggregation() {
    return aggregation;
  }

  public void setAggregation(EventFilterAggregation aggregation) {
    this.aggregation = aggregation;
  }

  public EventFilter filterExpression(String filterExpression) {
    this.filterExpression = filterExpression;
    return this;
  }

   /**
   * Get filterExpression
   * @return filterExpression
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getFilterExpression() {
    return filterExpression;
  }

  public void setFilterExpression(String filterExpression) {
    this.filterExpression = filterExpression;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventFilter eventFilter = (EventFilter) o;
    return Objects.equals(this.collection, eventFilter.collection) &&
        Objects.equals(this.timeframe, eventFilter.timeframe) &&
        Objects.equals(this.aggregation, eventFilter.aggregation) &&
        Objects.equals(this.filterExpression, eventFilter.filterExpression);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collection, timeframe, aggregation, filterExpression);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventFilter {\n");
    
    sb.append("    collection: ").append(toIndentedString(collection)).append("\n");
    sb.append("    timeframe: ").append(toIndentedString(timeframe)).append("\n");
    sb.append("    aggregation: ").append(toIndentedString(aggregation)).append("\n");
    sb.append("    filterExpression: ").append(toIndentedString(filterExpression)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

