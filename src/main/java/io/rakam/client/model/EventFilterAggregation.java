/**
 * Rakam API Documentation
 * An analytics platform API that lets you create your own analytics services.
 *
 * OpenAPI spec version: 0.5
 * Contact: contact@rakam.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.rakam.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * EventFilterAggregation
 */

public class EventFilterAggregation   {
  @SerializedName("field")
  private String field = null;

  @SerializedName("minimum")
  private Long minimum = null;

  @SerializedName("maximum")
  private Long maximum = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    @SerializedName("COUNT")
    COUNT("COUNT"),
    
    @SerializedName("COUNT_UNIQUE")
    COUNT_UNIQUE("COUNT_UNIQUE"),
    
    @SerializedName("SUM")
    SUM("SUM"),
    
    @SerializedName("MINIMUM")
    MINIMUM("MINIMUM"),
    
    @SerializedName("MAXIMUM")
    MAXIMUM("MAXIMUM"),
    
    @SerializedName("AVERAGE")
    AVERAGE("AVERAGE"),
    
    @SerializedName("APPROXIMATE_UNIQUE")
    APPROXIMATE_UNIQUE("APPROXIMATE_UNIQUE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public EventFilterAggregation field(String field) {
    this.field = field;
    return this;
  }

   /**
   * Get field
   * @return field
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getField() {
    return field;
  }

  public void setField(String field) {
    this.field = field;
  }

  public EventFilterAggregation minimum(Long minimum) {
    this.minimum = minimum;
    return this;
  }

   /**
   * Get minimum
   * @return minimum
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getMinimum() {
    return minimum;
  }

  public void setMinimum(Long minimum) {
    this.minimum = minimum;
  }

  public EventFilterAggregation maximum(Long maximum) {
    this.maximum = maximum;
    return this;
  }

   /**
   * Get maximum
   * @return maximum
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getMaximum() {
    return maximum;
  }

  public void setMaximum(Long maximum) {
    this.maximum = maximum;
  }

  public EventFilterAggregation type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventFilterAggregation eventFilterAggregation = (EventFilterAggregation) o;
    return Objects.equals(this.field, eventFilterAggregation.field) &&
        Objects.equals(this.minimum, eventFilterAggregation.minimum) &&
        Objects.equals(this.maximum, eventFilterAggregation.maximum) &&
        Objects.equals(this.type, eventFilterAggregation.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(field, minimum, maximum, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventFilterAggregation {\n");
    
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    minimum: ").append(toIndentedString(minimum)).append("\n");
    sb.append("    maximum: ").append(toIndentedString(maximum)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

