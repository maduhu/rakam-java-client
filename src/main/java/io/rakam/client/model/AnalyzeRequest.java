/**
 * Rakam API Documentation
 * An analytics platform API that lets you create your own analytics services.
 *
 * OpenAPI spec version: 0.5
 * Contact: contact@rakam.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.rakam.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.rakam.client.model.Measure;
import io.rakam.client.model.Reference;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.LocalDate;


/**
 * AnalyzeRequest
 */

public class AnalyzeRequest   {
  @SerializedName("measure")
  private Measure measure = null;

  @SerializedName("grouping")
  private Reference grouping = null;

  @SerializedName("segment")
  private Reference segment = null;

  @SerializedName("filterExpression")
  private String filterExpression = null;

  @SerializedName("startDate")
  private LocalDate startDate = null;

  @SerializedName("endDate")
  private LocalDate endDate = null;

  @SerializedName("collections")
  private List<String> collections = new ArrayList<String>();

  public AnalyzeRequest measure(Measure measure) {
    this.measure = measure;
    return this;
  }

   /**
   * Get measure
   * @return measure
  **/
  @ApiModelProperty(example = "null", value = "")
  public Measure getMeasure() {
    return measure;
  }

  public void setMeasure(Measure measure) {
    this.measure = measure;
  }

  public AnalyzeRequest grouping(Reference grouping) {
    this.grouping = grouping;
    return this;
  }

   /**
   * Get grouping
   * @return grouping
  **/
  @ApiModelProperty(example = "null", value = "")
  public Reference getGrouping() {
    return grouping;
  }

  public void setGrouping(Reference grouping) {
    this.grouping = grouping;
  }

  public AnalyzeRequest segment(Reference segment) {
    this.segment = segment;
    return this;
  }

   /**
   * Get segment
   * @return segment
  **/
  @ApiModelProperty(example = "null", value = "")
  public Reference getSegment() {
    return segment;
  }

  public void setSegment(Reference segment) {
    this.segment = segment;
  }

  public AnalyzeRequest filterExpression(String filterExpression) {
    this.filterExpression = filterExpression;
    return this;
  }

   /**
   * Get filterExpression
   * @return filterExpression
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getFilterExpression() {
    return filterExpression;
  }

  public void setFilterExpression(String filterExpression) {
    this.filterExpression = filterExpression;
  }

  public AnalyzeRequest startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(example = "null", value = "")
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public AnalyzeRequest endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(example = "null", value = "")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

  public AnalyzeRequest collections(List<String> collections) {
    this.collections = collections;
    return this;
  }

   /**
   * Get collections
   * @return collections
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getCollections() {
    return collections;
  }

  public void setCollections(List<String> collections) {
    this.collections = collections;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnalyzeRequest analyzeRequest = (AnalyzeRequest) o;
    return Objects.equals(this.measure, analyzeRequest.measure) &&
        Objects.equals(this.grouping, analyzeRequest.grouping) &&
        Objects.equals(this.segment, analyzeRequest.segment) &&
        Objects.equals(this.filterExpression, analyzeRequest.filterExpression) &&
        Objects.equals(this.startDate, analyzeRequest.startDate) &&
        Objects.equals(this.endDate, analyzeRequest.endDate) &&
        Objects.equals(this.collections, analyzeRequest.collections);
  }

  @Override
  public int hashCode() {
    return Objects.hash(measure, grouping, segment, filterExpression, startDate, endDate, collections);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnalyzeRequest {\n");
    
    sb.append("    measure: ").append(toIndentedString(measure)).append("\n");
    sb.append("    grouping: ").append(toIndentedString(grouping)).append("\n");
    sb.append("    segment: ").append(toIndentedString(segment)).append("\n");
    sb.append("    filterExpression: ").append(toIndentedString(filterExpression)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    collections: ").append(toIndentedString(collections)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

