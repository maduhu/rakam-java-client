/**
 * Rakam API Documentation
 * An analytics platform API that lets you create your own analytics services.
 *
 * OpenAPI spec version: 0.5
 * Contact: contact@rakam.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.rakam.client.api;

import io.rakam.ApiException;
import io.rakam.client.model.QueryResult;
import io.rakam.client.model.AnalyzeRequest;
import io.rakam.client.model.ErrorMessage;
import io.rakam.client.model.CreatePrecomputedTable;
import io.rakam.client.model.PrecalculatedTable;
import io.rakam.client.model.EventExplorerGetEventStatistics;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventexplorerApi
 */
public class EventexplorerApiTest {

    private final EventexplorerApi api = new EventexplorerApi();

    
    /**
     * Perform simple query on event data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void analyzeEventsTest() throws ApiException {
        AnalyzeRequest analyzeRequest = null;
        // QueryResult response = api.analyzeEvents(analyzeRequest);

        // TODO: test validations
    }
    
    /**
     * Create Pre-computed table
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPrecomputedTableTest() throws ApiException {
        CreatePrecomputedTable createPrecomputedTable = null;
        // PrecalculatedTable response = api.createPrecomputedTable(createPrecomputedTable);

        // TODO: test validations
    }
    
    /**
     * Event statistics
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEventStatisticsTest() throws ApiException {
        EventExplorerGetEventStatistics eventExplorerGetEventStatistics = null;
        // QueryResult response = api.getEventStatistics(eventExplorerGetEventStatistics);

        // TODO: test validations
    }
    
    /**
     * Event statistics
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getExtraDimensionsTest() throws ApiException {
        // Map<String, List<String>> response = api.getExtraDimensions();

        // TODO: test validations
    }
    
}
